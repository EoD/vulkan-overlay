From 902be4c78eefaa120298a4d65e0e29a93e39e4c6 Mon Sep 17 00:00:00 2001
From: "Luke A. Guest" <laguest@archeia.com>
Date: Fri, 3 Feb 2017 16:06:00 +0000
Subject: [PATCH 11/14] Change drm_vblank_[on|off] to drm_crtc_vblank_[on|off],
 for kernel v4.10.

---
 amd/amdgpu/dce_v10_0.c   | 8 ++++++++
 amd/amdgpu/dce_v11_0.c   | 8 ++++++++
 amd/amdgpu/dce_v6_0.c    | 8 ++++++++
 amd/amdgpu/dce_v8_0.c    | 8 ++++++++
 amd/amdgpu/dce_virtual.c | 8 ++++++++
 5 files changed, 40 insertions(+)

diff --git a/amd/amdgpu/dce_v10_0.c b/amd/amdgpu/dce_v10_0.c
index 9b58fa0..e8190e7 100644
--- a/amd/amdgpu/dce_v10_0.c
+++ b/amd/amdgpu/dce_v10_0.c
@@ -2714,13 +2714,21 @@ static void dce_v10_0_crtc_dpms(struct drm_crtc *crtc, int mode)
 		type = amdgpu_crtc_idx_to_irq_type(adev, amdgpu_crtc->crtc_id);
 		amdgpu_irq_update(adev, &adev->crtc_irq, type);
 		amdgpu_irq_update(adev, &adev->pageflip_irq, type);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_on(crtc);
+#else
 		drm_vblank_on(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		dce_v10_0_crtc_load_lut(crtc);
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
 	case DRM_MODE_DPMS_OFF:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_off(crtc);
+#else
 		drm_vblank_off(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		if (amdgpu_crtc->enabled) {
 			dce_v10_0_vga_enable(crtc, true);
 			amdgpu_atombios_crtc_blank(crtc, ATOM_ENABLE);
diff --git a/amd/amdgpu/dce_v11_0.c b/amd/amdgpu/dce_v11_0.c
index 4d6e641..cdcb9d0 100644
--- a/amd/amdgpu/dce_v11_0.c
+++ b/amd/amdgpu/dce_v11_0.c
@@ -2730,13 +2730,21 @@ static void dce_v11_0_crtc_dpms(struct drm_crtc *crtc, int mode)
 		type = amdgpu_crtc_idx_to_irq_type(adev, amdgpu_crtc->crtc_id);
 		amdgpu_irq_update(adev, &adev->crtc_irq, type);
 		amdgpu_irq_update(adev, &adev->pageflip_irq, type);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_on(crtc);
+#else
 		drm_vblank_on(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		dce_v11_0_crtc_load_lut(crtc);
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
 	case DRM_MODE_DPMS_OFF:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_off(crtc);
+#else
 		drm_vblank_off(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		if (amdgpu_crtc->enabled) {
 			dce_v11_0_vga_enable(crtc, true);
 			amdgpu_atombios_crtc_blank(crtc, ATOM_ENABLE);
diff --git a/amd/amdgpu/dce_v6_0.c b/amd/amdgpu/dce_v6_0.c
index 5638dc3..fc748cb 100644
--- a/amd/amdgpu/dce_v6_0.c
+++ b/amd/amdgpu/dce_v6_0.c
@@ -2078,13 +2078,21 @@ static void dce_v6_0_crtc_dpms(struct drm_crtc *crtc, int mode)
 		type = amdgpu_crtc_idx_to_irq_type(adev, amdgpu_crtc->crtc_id);
 		amdgpu_irq_update(adev, &adev->crtc_irq, type);
 		amdgpu_irq_update(adev, &adev->pageflip_irq, type);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_on(crtc);
+#else
 		drm_vblank_post_modeset(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		dce_v6_0_crtc_load_lut(crtc);
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
 	case DRM_MODE_DPMS_OFF:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_off(crtc);
+#else
 		drm_vblank_pre_modeset(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		if (amdgpu_crtc->enabled)
 			amdgpu_atombios_crtc_blank(crtc, ATOM_ENABLE);
 		amdgpu_atombios_crtc_enable(crtc, ATOM_DISABLE);
diff --git a/amd/amdgpu/dce_v8_0.c b/amd/amdgpu/dce_v8_0.c
index 3fbf483..52ae34d 100644
--- a/amd/amdgpu/dce_v8_0.c
+++ b/amd/amdgpu/dce_v8_0.c
@@ -2565,13 +2565,21 @@ static void dce_v8_0_crtc_dpms(struct drm_crtc *crtc, int mode)
 		type = amdgpu_crtc_idx_to_irq_type(adev, amdgpu_crtc->crtc_id);
 		amdgpu_irq_update(adev, &adev->crtc_irq, type);
 		amdgpu_irq_update(adev, &adev->pageflip_irq, type);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_on(crtc);
+#else
 		drm_vblank_on(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		dce_v8_0_crtc_load_lut(crtc);
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
 	case DRM_MODE_DPMS_OFF:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_off(crtc);
+#else
 		drm_vblank_off(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		if (amdgpu_crtc->enabled) {
 			dce_v8_0_vga_enable(crtc, true);
 			amdgpu_atombios_crtc_blank(crtc, ATOM_ENABLE);
diff --git a/amd/amdgpu/dce_virtual.c b/amd/amdgpu/dce_virtual.c
index 57da2df..8ffd666 100644
--- a/amd/amdgpu/dce_virtual.c
+++ b/amd/amdgpu/dce_virtual.c
@@ -225,12 +225,20 @@ static void dce_virtual_crtc_dpms(struct drm_crtc *crtc, int mode)
 		/* Make sure VBLANK interrupts are still enabled */
 		type = amdgpu_crtc_idx_to_irq_type(adev, amdgpu_crtc->crtc_id);
 		amdgpu_irq_update(adev, &adev->crtc_irq, type);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_on(crtc);
+#else
 		drm_vblank_on(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		break;
 	case DRM_MODE_DPMS_STANDBY:
 	case DRM_MODE_DPMS_SUSPEND:
 	case DRM_MODE_DPMS_OFF:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0)
+		drm_crtc_vblank_off(crtc);
+#else
 		drm_vblank_off(dev, amdgpu_crtc->crtc_id);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(4, 10, 0) */
 		amdgpu_crtc->enabled = false;
 		break;
 	}
-- 
2.7.3

